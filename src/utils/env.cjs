// Carrega vari√°veis de ambiente do arquivo `.env`
require('dotenv').config();

/**
 * Este m√≥dulo centraliza e exporta todas as vari√°veis de ambiente utilizadas
 * no sistema de autentica√ß√£o JWT. Isso garante consist√™ncia e facilita testes
 * e mudan√ßas de configura√ß√£o.
 */

// üîê Segredo usado para assinar tokens JWT (algoritmos HS)
const JWT_SECRET = process.env.JWT_SECRET || 'default-secret';

// ‚è± Tempo de expira√ß√£o padr√£o para access tokens
const JWT_EXPIRES_IN = process.env.JWT_EXPIRES_IN || '1h';

// ‚öôÔ∏è Algoritmo padr√£o de assinatura (HS256, HS512, RS256, etc.)
const JWT_ALGORITHM = process.env.JWT_ALGORITHM || 'HS256';

// üìÅ Caminho para chave privada (necess√°rio se usar RS256)
const JWT_PRIVATE_KEY_PATH = process.env.JWT_PRIVATE_KEY_PATH || '';

// üìÅ Caminho para chave p√∫blica (necess√°rio se usar RS256)
const JWT_PUBLIC_KEY_PATH = process.env.JWT_PUBLIC_KEY_PATH || '';

// üîÅ Segredo usado para assinar tokens de refresh
const JWT_REFRESH_SECRET = process.env.JWT_REFRESH_SECRET || 'refresh-secret';

// ‚è± Tempo de expira√ß√£o dos tokens de refresh
const JWT_REFRESH_EXPIRES_IN = process.env.JWT_REFRESH_EXPIRES_IN || '7d';

// Exporta todas as vari√°veis de forma centralizada
module.exports = {
  JWT_SECRET,
  JWT_EXPIRES_IN,
  JWT_ALGORITHM,
  JWT_PRIVATE_KEY_PATH,
  JWT_PUBLIC_KEY_PATH,
  JWT_REFRESH_SECRET,
  JWT_REFRESH_EXPIRES_IN,
};
